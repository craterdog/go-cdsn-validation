
!>
    CRATER DOG SYNTAX NOTATION
    This document contains a formal definition of the Crater Dog Syntax Notationâ„¢
    (CDSN) language grammar using CDSN itself in homage to Douglas Hofstadter.  A
    language grammar consists of a set of rule definitions and token definitions.
<!


!>
    RULE DEFINITIONS
    The following rules are used by the parser when parsing the stream of tokens
    generated by the scanner.  Each rule name begins with a lowercase letter.
    The rule definitions may reference tokens or other rules and are attempted
    by the parser in the order listed.  The sequence of factors within in a rule
    definition may be separated by whitespace which is ignored by the parser.
<!

$grammar: <statement> EOF  ! Terminated with an end-of-file marker.

$statement: COMMENT | definition

$definition: SYMBOL ":" expression  ! This works for both tokens and rules.

$expression: alternative {"|" alternative}

$alternative: <factor> [NOTE]

$factor: token | range | inverse | exactlyN | zeroOrOne | zeroOrMore | oneOrMore

$token: INTRINSIC | STRING | NUMBER | NAME

$range: CHARACTER [".." CHARACTER]  ! A range of CHARACTERs is inclusive.

$inverse: "~" factor

$exactlyN: "(" expression ")" [NUMBER]  ! The default is exactly one.

$zeroOrOne: "[" expression "]"

$zeroOrMore: "{" expression "}"

$oneOrMore: "<" expression ">"


!>
    TOKEN DEFINITIONS
    The following token definitions are used by the scanner to generate the
    stream of tokens that are processed by the parser.  Each token name begins
    with an uppercase letter.  Unlike with rule definitions, a token definition
    cannot reference a rule and the whitespace within a token definition is not
    ignored.  The INTRINSIC tokens are environment/language specific, and are
    therefore left undefined. The token definitions are processed in the order
    listed.
<!

$INTRINSIC: "LOWERCASE" | "UPPERCASE" | "DIGIT" | "EOL" | "EOF"

$LETTER: LOWERCASE | UPPERCASE

$IGNORED: " " | EOL

$NOTE: "! " {~EOL}

$COMMENT: "!>" EOL {COMMENT | ~"<!"} EOL "<!"

$CHARACTER: "'" ~"'" "'"

$STRING: '"' <~'"'> '"'

$NUMBER: <DIGIT>

$NAME: LETTER {LETTER | DIGIT}  ! NAMEs must be scanned after INTRINSICs.

$SYMBOL: "$" NAME

$DELIMITER: "~" | ":" | "|" | "(" | ")" | "[" | "]" | "{" | "}" | "<" | ">" | ".."

