!>
    A formal definition of Crater Dog Syntax Notation™ (CDSN) using Crater Dog
    Syntax Notation™ itself. Token names are identified by all CAPITAL
    letters and rule names are identified by lowerCamelCase letters.

    The INTRINSIC tokens are environment dependent and therefore left undefined.
    The tokens are scanned in the order listed so an INTRINSIC token takes
    precedence over an IDENTIFIER token.

    The rules are applied in the order listed as well, so within a factor a
    range takes precedence over an individual CHARACTER.  The starting rule is
    the "$grammar" rule.
<!

$grammar: <statement> EOF  ! Terminated by an end-of-file marker.

$statement: (
      COMMENT  ! This is a test.
    | production
) <EOL>

$production: SYMBOL ":" rule

$rule: [EOL] option {[EOL] "|" option}

$option: <factor> [NOTE]

$factor:
      range  ! A range of characters.
    | "~" factor  ! The inversion of the factor.
    | "(" rule ")"  ! The rule takes precedence.
    | "[" rule "]"  ! Zero or one instances of the rule.
    | "{" rule "}"  ! Zero or more instances of the rule.
    | "<" rule ">"  ! One or more instances of the rule.
    | CHARACTER
    | LITERAL
    | INTRINSIC
    | IDENTIFIER

$range: CHARACTER ".." CHARACTER

$CHARACTER: "'" ~"'" "'"

$LITERAL: '"' <~'"'> '"'

$INTRINSIC: "LETTER" | "DIGIT" | "EOL" | "EOF"

$SYMBOL: "$" IDENTIFIER

$IDENTIFIER: LETTER {LETTER | DIGIT}

$NOTE: "! " {~EOL}

$COMMENT: "!>" EOL {COMMENT | ~"<!"} EOL "<!"

